generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  user_id    Int       @id @default(autoincrement())
  username   String    @db.VarChar(50)
  password   String    @db.VarChar(255)
  email      String    @unique @db.VarChar(50)
  role       Role      @default(USER)
  created_on DateTime  @default(now())
  last_login DateTime? @default(now())
}

model Matakuliah {
  id_matakuliah Int        @id @default(autoincrement()) 
  hematologi    Int
  kardio        Int
  respiratory   Int
  integumen     Int
  muskulo       Int
  persepsi      Int
  kritis        Int
  paliatif      Int
  histories       History[]  
}

model History {
  id_history      String               @id @default(uuid())
  barangId       String
  matakuliahId   Int
  nama_barang     String            @db.VarChar(50)
  jumlah          Int

  matkuls      Matakuliah        @relation(fields:[matakuliahId], references: [id_matakuliah])
  barangs          Barang            @relation(fields:[barangId], references: [id_barang])
}

model Barang {
  id_barang       String            @id
  nama_barang     String            @db.VarChar(50)
  total_stock     Int
  jenis_barang    String            @db.VarChar(50)
  harga_barang    Int
  gambar_barang   String?
  keranjangs      Keranjang[]
  transaksiBarang TransaksiBarang[]
  history         History[]

  @@map("barangs")
}

model Peminjam {
  id_peminjam         Int               @id @default(autoincrement())
  nama_dosen          String            @db.VarChar(50)
  nama_matakuliah     String            @db.VarChar(50)
  prasat              String            @db.VarChar(50)
  jam_praktek         String            @db.VarChar(10)
  tanggal_praktek     String?           @db.VarChar(20)
  tanggal_pengambilan DateTime          @default(now())
  keranjangId         Int
  keranjangs          Keranjang        @relation(fields: [keranjangId], references: [id_keranjang], onDelete: Cascade)
  transaksiBarang     TransaksiBarang[]      
  @@map("peminjam")
}




model Keranjang {
  id_keranjang Int        @id @default(autoincrement())
  barangId     String
  barangs      Barang    @relation(fields: [barangId], references: [id_barang])
  jumlah_barang Int? 
  peminjam     Peminjam[]
  isCheckedOut String?   @default("N")
  delete_at    DateTime  @default(now())

  @@map("keranjangs")
}


model TransaksiBarang {
  id_transaksi_barang Int      @id @default(autoincrement())
  jumlah_barang       Int?
  barangId            String
  type                Type
  peminjamId          Int?
  barangs             Barang  @relation(fields: [barangId], references: [id_barang])
  peminjam            Peminjam? @relation(fields: [peminjamId], references: [id_peminjam], onDelete: Cascade)
  tanggal_keluar      DateTime? @default(now())
  tanggal_masuk       String?
  nama_matakuliah     String?
  nama_barang         String?

  @@map("transaksiBarang")
}

enum Type {
  BarangKeluar
  BarangMasuk
  PENDING
}

enum Role {
  ADMIN
  USER
}
